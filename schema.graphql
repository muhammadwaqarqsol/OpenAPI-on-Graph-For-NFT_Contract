type Token @entity {
  id: ID!
  tokenID: BigInt!
  contentURI: String!
  Name: String
  Description: String
  ImageUrl: String
  Listed: Boolean
  price: BigInt
  createdAtTimestamp: BigInt!
  creator: User
  owner: User
}

type User @entity {
  id: ID!
  tokens: [Token!] @derivedFrom(field: "owner")
  created: [Token!] @derivedFrom(field: "creator")
}

type Transfer @entity {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  Name: String
  Description: String
  ImageUrl: String
}

type _Schema_
  @fulltext(
    name: "tokenSearch"
    language: en
    algorithm: rank
    include: [
      { entity: "Token", fields: [{ name: "Name" }, { name: "Description" }] }
    ]
  )

type Buy @entity {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  Name: String
  Description: String
  ImageUrl: String
  price: BigInt
}
